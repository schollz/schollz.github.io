<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2018 05 on Zack&#39;s Notablog</title><link>/written/2018-05/</link><description>Recent content in 2018 05 on Zack&#39;s Notablog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 28 May 2018 10:28:00 -0700</lastBuildDate><atom:link href="/written/2018-05/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing Keybase on Chromebook</title><link>/installing-keybase-on-chromebook/</link><pubDate>Mon, 28 May 2018 10:28:00 -0700</pubDate><guid>/installing-keybase-on-chromebook/</guid><description>Keybase is a great system for mounting a end-to-end encrypted filesystem. It also has an encrypted git feature which is great for storing secure information in repositories. While keybase has releases for most systems, that don&amp;rsquo;t have any releases for armh, of which Chromebooks fall.
With help from the keybase developers I have determined a way to get keybase up and running on a Chromebook in no time.
First install the pre-requisites:</description></item><item><title>My Favorite Vimrc</title><link>/my-favorite-vimrc/</link><pubDate>Mon, 28 May 2018 10:25:45 -0700</pubDate><guid>/my-favorite-vimrc/</guid><description>I&amp;rsquo;ve been enjoying writing in vim a lot more. There is a nice and simple way to make writing a lot easier (word-wrapping, nice color scheme). You can just make the following config file (save as ~/.vimrc):
func! WordProcessorMode() set columns=80 setlocal formatoptions=1 setlocal noexpandtab map j gj map k gk setlocal spell spelllang=en_us set complete+=s set formatprg=par setlocal wrap setlocal linebreak set foldcolumn=3 highlight Normal ctermfg=black ctermbg=grey hi NonText ctermfg=grey guifg=grey endfu com!</description></item><item><title>Hugo Craft</title><link>/hugocraft/</link><pubDate>Sat, 26 May 2018 23:12:08 -0600</pubDate><guid>/hugocraft/</guid><description>This is a ready-to-go Hugo-based blog publishing system. The styling has a lot of inspiration from the blog of Chris Siebenmann which I think excels in simplicity and minimalism. It uses mage for an OS-agnostic build system to make it easy to chain commands. It has a simple search and comments ready-to-go.
Features Integrated search (try it) Integrated comments at the bottom of each post Automatic image captioning using markdown Very fast (base page ~3.</description></item><item><title>Shallow `go get`</title><link>/shallow-go-get/</link><pubDate>Sun, 06 May 2018 07:00:57 -0700</pubDate><guid>/shallow-go-get/</guid><description>This is a little hack to use shallow clones for new git checkouts with go get. Unfortunately for Gophers, this has been an open issue for three years counting without a workable solution aside from patching the go toolchain yourself. This solution utilizes a git wrapper that determines if a pull/clone is happening and then makes sure it is shallow.
The wrapper is only a few lines of code, here&amp;rsquo;s the main.</description></item></channel></rss>