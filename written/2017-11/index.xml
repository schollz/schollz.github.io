<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2017 11 on Zack&#39;s Notablog</title><link>/written/2017-11/</link><description>Recent content in 2017 11 on Zack&#39;s Notablog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 10 Nov 2017 04:50:00 -0700</lastBuildDate><atom:link href="/written/2017-11/index.xml" rel="self" type="application/rss+xml"/><item><title>How to easily make nested templates (Go)</title><link>/golang-nested-templates/</link><pubDate>Fri, 10 Nov 2017 04:50:00 -0700</pubDate><guid>/golang-nested-templates/</guid><description>https://play.golang.org/p/OVkruYsBVV
package main import ( &amp;#34;bytes&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;text/template&amp;#34; ) type View struct { Title string Content string } func main() { header := ` {{define &amp;#34;header&amp;#34;}}&amp;lt;head&amp;gt; &amp;lt;title&amp;gt;{{ $.Title }}&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; {{end}}` page := ` This line should not show {{define &amp;#34;indexPage&amp;#34;}}&amp;lt;html&amp;gt; {{template &amp;#34;header&amp;#34; .}}&amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;{{ .Content }}&amp;lt;/h1&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; {{end}}` view := View{Title: &amp;#34;some title&amp;#34;, Content: &amp;#34;some content&amp;#34;} // Here we try to set which page to view as content t := template.</description></item></channel></rss>